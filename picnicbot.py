from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os

API_TOKEN = os.getenv("API_TOKEN")
ADMIN_ID = "130759988" #change to id from (check in @UserInfeBot)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
user_choice = {}
UAH_PRICE_MAP = {
    '1month': '2500 –≥—Ä–Ω',
    '3months': '6650 –≥—Ä–Ω',
    '6months': '13200 –≥—Ä–Ω',
    'first_time': '2250 –≥—Ä–Ω'  # discounted first month
}
PAYPAL_PRICE_MAP = {
    '1month': '60 USD',
    '3months': '160 USD',
    '6months': '320 USD',
    'first_time': '55 USD'  # discounted first month
}
CRYPTO_PRICE_MAP = {
    '1month': '60 USDT',
    '3months': '160 USDT',
    '6months': '320 USDT',
    'first_time': '55 USDT'  # discounted first month
} 

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = InlineKeyboardMarkup(row_width=2)
main_menu.add(
    InlineKeyboardButton("üîÆ –û–±—Ä–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É", callback_data="subscribe"),
    InlineKeyboardButton("‚ùì –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="support")
)

# –¢–∞—Ä–∏—Ñ—ã –º–µ–Ω—é
tariffs_menu = InlineKeyboardMarkup(row_width=1)
tariffs_menu.add(
    InlineKeyboardButton("üîπ 1 –º—ñ—Å—è—Ü—å", callback_data="1month"),
    InlineKeyboardButton("üîπ 3 –º—ñ—Å—è—Ü—ñ", callback_data="3months"),
    InlineKeyboardButton("üîπ 6 –º—ñ—Å—è—Ü—ñ–≤", callback_data="6months"),
    InlineKeyboardButton("üîπ –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –≤–ø–µ—Ä—à–µ", callback_data="first_time"),
    InlineKeyboardButton("üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")
)
# –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
get_back = InlineKeyboardMarkup(row_width=1)
get_back.add(
    InlineKeyboardButton("üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")
)

#–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã
def get_payment_menu():
    menu = InlineKeyboardMarkup(row_width=1)
    menu.add(
        InlineKeyboardButton("üí≥ –ö–∞—Ä—Ç–∞ ‚Ç¥", callback_data="pay_uah"),
        InlineKeyboardButton("üåç PayPal $ ", callback_data="pay_paypal"),
        InlineKeyboardButton("‚Çø Tether ‚ÇÆ", callback_data="pay_crypto"),
        InlineKeyboardButton("üåÄ –Ü–Ω—à–∏–π —Å–ø–æ—Å—ñ–±", callback_data="other_payment"),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ —Ç–∞—Ä–∏—Ñ—ñ–≤", callback_data="back_to_tariffs")
    )
    return menu

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
confirmation_menu = InlineKeyboardMarkup(row_width=1)
confirmation_menu.add(
    InlineKeyboardButton("‚úâÔ∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è", callback_data='confirm'),
    InlineKeyboardButton("üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")
)

# –°—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    welcome_text = (
        "–ü—Ä–∏–≤—ñ—Ç! üëãüèª\n\n"
        "–†–∞–¥–∞, —â–æ —Ç–∏ —Ç—É—Ç ü§ç\n\n"
        "–Ø - –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ BeIn, –Ω–∞—à–æ–≥–æ –æ–Ω–ª–∞–π–Ω –π–æ–≥–∞-–∫–ª—É–±—É üåø\n"
        "–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –æ—Ñ–æ—Ä–º–∏—Ç–∏ —É—á–∞—Å—Ç—å –≤ –∫–ª—É–±—ñ –π –∑–∞–¥–∞—Ç–∏ –±—É–¥—å-—è–∫–µ –ø–∏—Ç–∞–Ω–Ω—è.\n\n"
        "üëáüèª –û–±–µ—Ä–∏, –∑ —á–æ–≥–æ –ø–æ—á–∞—Ç–∏:"
    )
    await message.answer(welcome_text, reply_markup=main_menu)

# Support
@dp.callback_query_handler(lambda c: c.data == 'support')
async def support(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        "–Ø–∫—â–æ –º–∞—î—à –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —á–∏ —â–æ—Å—å –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–æ–ø–æ–º–æ–≥—Ç–∏ —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ ü§ç\n\n"
        "–ú–æ–∂–µ—à —Ç–∞–∫–æ–∂ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–ø—Ä—è–º—É –¥–æ –ê–Ω—ñ: @anna_baron üí¨",
        reply_markup=get_back
    )

#Subscribe
@dp.callback_query_handler(lambda c: c.data == 'subscribe')
async def subscribe(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        "BeIn - —Ü–µ –æ–Ω–ª–∞–π–Ω-–ø—Ä–æ—Å—Ç—ñ—Ä, –¥–µ –º–∏ –ø—Ä–∞–∫—Ç–∏–∫—É—î–º–æ –π–æ–≥—É, –≤—á–∏–º–æ—Å—å —Å–ª—É—Ö–∞—Ç–∏ —Ç—ñ–ª–æ –π –≤—ñ–¥–ø–æ—á–∏–≤–∞—Ç–∏ —Ä–æ–∑—É–º–æ–º.\n\n"
        "üå∏ –∂–∏–≤—ñ —Ç–∞ –∑–∞–ø–∏—Å–∞–Ω—ñ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑ –π–æ–≥–∏\n"
        "üå∏ –ª–µ–∫—Ü—ñ—ó –≤—ñ–¥ –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤\n"
        "üå∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏\n\n"
        "üëáüèª –î–∞–≤–∞–π –æ–±–µ—Ä–µ–º–æ –∑—Ä—É—á–Ω–∏–π —Ç–∞—Ä–∏—Ñ:",
        reply_markup=tariffs_menu
    )

# Month button respond
@dp.callback_query_handler(lambda c: c.data in ['1month', '3months', '6months', 'first_time'])
async def choose_tariff(callback: types.CallbackQuery):
    await callback.answer()
    user_choice[callback.from_user.id] = callback.data
    if callback.data == '1month':
        text = "–ö–ª–∞—Å! –î—è–∫—É—é —Ç–æ–±—ñ –∑–∞ –≤–∏–±—ñ—Ä üíú \n\n–û–±–µ—Ä–∏ –∑—Ä—É—á–Ω–∏–π –¥–ª—è —Å–µ–±–µ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:"
    elif callback.data == '3months':
        text = "–°—É–ø–µ—Ä –≤–∏–±—ñ—Ä! –¶–µ –≥–∞—Ä–Ω–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥—á—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç üôåüèª\n\n–û–±–µ—Ä–∏ –∑—Ä—É—á–Ω–∏–π –¥–ª—è —Å–µ–±–µ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:"
    elif callback.data == '6months':
        text = "–í–∞—É, —Ç–∏ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∞! –¢–∞–∫–∞ —Ä—ñ—à—É—á—ñ—Å—Ç—å –∑–∞–≤–∂–¥–∏ –Ω–∞–¥–∏—Ö–∞—î ‚ú®\n\n–û–±–µ—Ä–∏ –∑—Ä—É—á–Ω–∏–π –¥–ª—è —Å–µ–±–µ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:"
    else:
        text = "–î–ª—è –Ω–æ–≤–∏—Ö —É—á–∞—Å–Ω–∏—Ü—å –¥—ñ—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è - –∑–Ω–∏–∂–∫–∞ 10% –Ω–∞ –ø–µ—Ä—à–∏–π –º—ñ—Å—è—Ü—å üåô"
    await callback.message.edit_text(text, reply_markup=get_payment_menu())

#Other payment
@dp.callback_query_handler(lambda c: c.data == 'other_payment')
async def other_payment(callback: types.CallbackQuery):
    await callback.answer()
    menu = InlineKeyboardMarkup(row_width=1)
    menu.add(
        InlineKeyboardButton("üå∏ –ù–∞–ø–∏—Å–∞—Ç–∏ –ê–Ω—ñ", url="https://t.me/anna_baron"),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ —Ç–∞—Ä–∏—Ñ—ñ–≤", callback_data="back_to_tariffs")
    )
    await callback.message.edit_text("–ù–µ –∑–Ω–∞–π—à–ª–∞ –∑—Ä—É—á–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏? –ù–µ —Ö–≤–∏–ª—é–π—Å—è üå±\n \n–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –Ω–∞–ø–∏—Å–∞—Ç–∏ –ê–Ω—ñ - –≤–æ–Ω–∞ –¥–æ–ø–æ–º–æ–∂–µ –∑–Ω–∞–π—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç üíå", reply_markup=menu)

#UAH
@dp.callback_query_handler(lambda c: c.data == 'pay_uah')
async def pay_uah(callback: types.CallbackQuery):
    await callback.answer()
    tariff = user_choice.get(callback.from_user.id)
    price = UAH_PRICE_MAP.get(tariff)
    await callback.message.edit_text(
        "–°—É–ø–µ—Ä, –º–∏ –º–∞–π–∂–µ –Ω–∞ —Ñ—ñ–Ω—ñ—à—ñ üéØ\n\n"
        "üí≥ –ö–∞—Ä—Ç–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç–∏: 4441 1110 4149 2384\n"
        "üë§ –û—Ç—Ä–∏–º—É–≤–∞—á: –ë–∞—Ä–æ–Ω –ì–∞–Ω–Ω–∞ –Ü–≤–∞–Ω—ñ–≤–Ω–∞\n"
        f"üí∞ –°—É–º–∞: {price}\n\n"
        "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É:",
        reply_markup=confirmation_menu
    )
    
#PAYPAL
@dp.callback_query_handler(lambda c: c.data == 'pay_paypal')
async def pay_paypal(callback: types.CallbackQuery):
    await callback.answer()
    tariff = user_choice.get(callback.from_user.id)
    price = PAYPAL_PRICE_MAP.get(tariff)
    await callback.message.edit_text(
        "–ß—É–¥–æ–≤–æ! \n–û—Å—å —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏:\n\n"
        "üì© PayPal: brn.anna26@gmail.com\n"
        f"üí∞ –°—É–º–∞: {price}\n\n"
        "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É:",
        reply_markup=confirmation_menu
    )

#CRYPTO
@dp.callback_query_handler(lambda c: c.data == 'pay_crypto')
async def pay_crypto(callback: types.CallbackQuery):
    await callback.answer()
    tariff = user_choice.get(callback.from_user.id)
    price = CRYPTO_PRICE_MAP.get(tariff)
    await callback.message.edit_text(
        "–î—è–∫—É—é –∑–∞ –≤–∏–±—ñ—Ä!\n\n"
        f"–û—Å—å –∫—Ä–∏–ø—Ç–æ–≥–∞–º–∞–Ω–µ—Ü—å –¥–ª—è –æ–ø–ª–∞—Ç–∏:\n–í–∞–ª—é—Ç–∞ USDT, –º–µ—Ä–µ–∂–∞ TRC20: \n \n `TAkhXBSU9h5x7dauzcPTxktip4obiuu5fN` \n\n"
        f"üí∞ –°—É–º–∞: {price}\n\n"
        "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É:",
        reply_markup=confirmation_menu, 
        parse_mode="Markdown"
    )

@dp.callback_query_handler(lambda c: c.data == 'confirm')
async def confirm(callback: types.CallbackQuery):
    await callback.answer()
    await bot.send_message(chat_id=ADMIN_ID, text=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{callback.from_user.username} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É –ø—Ä–æ –∑–¥—ñ–π—Å–Ω–µ–Ω—É –æ–ø–ª–∞—Ç—É")

    final_step_menu = InlineKeyboardMarkup(row_width=1)
    final_step_menu.add(
        InlineKeyboardButton("üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    await callback.message.edit_text("–°—É–ø–µ—Ä! –¢–∏ –º–æ–ª–æ–¥–µ—Ü—å, –∑–∞–ª–∏—à–∏–≤—Å—è –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫ ü§ç\n \n –ù–∞–¥—ñ—à–ª–∏, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–∫—Ä—ñ–Ω –∞–±–æ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –ê–Ω—ñ —É –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–ø–ª–∞—Ç—É @anna_baronüíå", 
                                     reply_markup=final_step_menu
                                    )

@dp.callback_query_handler(lambda c: c.data == 'back_to_tariffs')
async def back_to_tariffs(callback: types.CallbackQuery):
    await subscribe(callback)

@dp.callback_query_handler(lambda c: c.data == 'main_menu')
async def back_to_main(callback: types.CallbackQuery):
    # emulate /start
    class Msg: pass
    await callback.answer()
    await callback.message.delete()
    msg = Msg()
    msg.answer = callback.message.answer
    await send_welcome(msg)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
